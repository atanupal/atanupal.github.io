<?php
require_once ('../ImageFetcher.php');
/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-08-17 at 14:53:21.
 */
class ImageFetcherTest extends PHPUnit_Framework_TestCase {

    /**
     * @var ImageFetcher
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new ImageFetcher;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }
    
    public function testExceptionWithoutUrl() {
        $if = new ImageFetcher;
        $this->setExpectedException('InvalidArgumentException');
        $if->fetch();
    }
    
    public function testFetching() {
        $this->object->setUrl('http://php.net/');
        $results = $this->object->fetch();
        
        $this->assertInternalType('array', $results);
    }
    
    public function testExtractImages()
    {
        $html = '<html><body><img src="test1" alt="" /><p><img src="test2" alt="" />'
            . '</p></body></html>';
        
        $images = $this->object->extractImages($html);
        $this->assertEquals('test1', $images[0]);
        $this->assertEquals('test2', $images[1]);
    }
    
    public function testGettingName()
    {
        $url = 'http://static.php.net/www.php.net/images/php.gif';
                
        $this->assertEquals('php.gif', $this->object->getImageName($url));
    }
    
    public function testDownloadImage()
    {
        $path = 'tmp';
        if (!file_exists($path)) {
            mkdir($path);
        }
        $this->object->setUrl('http://php.net/');
        $this->object->downloadImages($path);
        
        $this->assertTrue(file_exists('tmp/php.gif'));
    }

}
